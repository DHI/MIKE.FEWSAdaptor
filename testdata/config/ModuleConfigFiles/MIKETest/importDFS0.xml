<?xml version="1.0" encoding="UTF-8"?>
<generalAdapterRun xmlns="http://www.wldelft.nl/fews" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.wldelft.nl/fews http://fews.wldelft.nl/schemas/version1.0/generalAdapterRun.xsd">
	<general>
		<description>Import data from DFS0</description>
		<!--The root dir contains temporary data that created while running the my adapters and my model -->
		<piVersion>1.8</piVersion>
		<rootDir>%REGION_HOME%/Modules/importDFS0/run</rootDir>
		<!--The work dir contains the input and output of my model, this data is temporary. The data my model is needed
		in the next run of my model is transferred to fews as a warm state -->
		<workDir>%ROOT_DIR%/work</workDir>
		<!--The pi-input dir is filled by the GA. The pre-adapter is converting the pi input to model input.
		 The pi-input and pi-output dir are not accessed by the model directly
		The model input and output is in the work dir.-->
		<exportDir>%ROOT_DIR%/pi-input</exportDir>
		<exportDataSetDir>%WORK_DIR%</exportDataSetDir>
		<!--This id map is converts fews ids to the ids MyModel understands and visa versa-->
		<exportIdMap>$map_name$</exportIdMap>
		<importDir>%ROOT_DIR%/pi-output</importDir>
		<importIdMap>$map_name$</importIdMap>
		<dumpFileDir>%ROOT_DIR%/CrashedRunsSnapshots</dumpFileDir>
		<dumpDir>%WORK_DIR%</dumpDir>
		<diagnosticFile>%ROOT_DIR%/pi-output/pi-diagnostics.xml</diagnosticFile>
	</general>
    
	<activities>
		<startUpActivities>
			<purgeActivity>
				<filter>%ROOT_DIR%/pi-input/*.*</filter>
			</purgeActivity>
			<purgeActivity>
				<filter>%ROOT_DIR%/pi-output/*.*</filter>
			</purgeActivity>
			<purgeActivity>
				<filter>%WORK_DIR%/*.log</filter>
			</purgeActivity>
			<makeDir>
				<dir>%ROOT_DIR%/work</dir>
			</makeDir>
		</startUpActivities>
		<exportActivities>			
			<exportDataSetActivity>
				<moduleInstanceId>importDFS0</moduleInstanceId>
			</exportDataSetActivity>
			 <exportRunFileActivity>
				<exportFile>%ROOT_DIR%/RunInfo.xml</exportFile>
			</exportRunFileActivity>
		</exportActivities>
		<executeActivities>
			<executeActivity>
				<command>
					<executable>%WORK_DIR%/Dfs0ToPI.exe</executable>
				</command>
				<arguments>
					<argument>%ROOT_DIR%/pi-output/$pi_name$</argument>
					<argument>$mike_model_dir$</argument>	
					<argument>""</argument>	
					<argument>""</argument>	
					<argument>"-1"</argument>	
					<argument>$dfs0_reletive_path$</argument>
				</arguments>
				<logFile>
					<file>%WORK_DIR%/PIToDfs0.log</file>
					<errorLinePattern>*ERROR*</errorLinePattern>
					<warningLinePattern>*WARNING*</warningLinePattern>
					<infoLinePattern>*INFO*</infoLinePattern>
				</logFile>
				<timeOut>10000000</timeOut>
				<ignoreDiagnostics>true</ignoreDiagnostics>
			</executeActivity>
		</executeActivities>
		<importActivities>
			<importTimeSeriesActivity>
				<importFile>$pi_name$</importFile>
				<timeSeriesSets>
					<timeSeriesSet>
						<moduleInstanceId>importDFS0</moduleInstanceId><!-- XXX changed from aqualog_store_results-->
						<valueType>scalar</valueType>		
						<parameterId>$parameterId$</parameterId>
						<locationSetId>$locationId$</locationSetId>
						<timeSeriesType>$timeSeriesType$</timeSeriesType>
						<timeStep unit="hour" multiplier="$ts_multiplier$"/>
						<readWriteMode>add originals</readWriteMode>
					</timeSeriesSet>
				</timeSeriesSets>
			</importTimeSeriesActivity>
		</importActivities>
	</activities>
</generalAdapterRun>
